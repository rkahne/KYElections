AllDemCounties$ky1979<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1979
})
AllDemCounties$ky1975<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1975
})
AlwaysDemCounties<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(!(FALSE %in% AllDemCounties[-1][i,])){
AlwaysDemCounties<-c(AlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
Lost2015Counties<-data.frame(AlwaysDemCounties,AlwaysDemCounties %in% Counties2015)
Lost2015Counties$region<-sapply(Lost2015Counties$AlwaysDemCounties,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
colnames(Lost2015Counties)<-c('region','value')
Lost2015Counties$value<-as.numeric(Lost2015Counties$value)
colnames(Lost2015Counties)<-c('County','value','region')
county_choropleth(Lost2015Counties,state_zoom='kentucky')
.libPaths('C:/R-Lib')
# KY Election Result Analysis
# Robert Kahne
library(choroplethr)
#KYFIPS<-subset(read.csv('./FIPS.csv',header=FALSE),V1=='KY')
KYFIPS<-read.csv('./KYFIPS.csv',sep=';')
#KYFIPS$County<-sapply(KYFIPS$V4,function(i){
#  strsplit(as.character(i),split=' ')[[1]][1]
#})
#KYFIPS$FIP<-paste(KYFIPS$V2,KYFIPS$V3,sep='')
#rownames(KYFIPS)<-1:length(KYFIPS$County)
kyelections<-read.csv('./kyelections.csv',sep=';')
kytotalvotes<-subset(kyelections,select=c(County,TotalVotes2015,TotalVotes2011,TotalVotes2007,TotalVotes2003,TotalVotes1999,TotalVotes1995,TotalVotes1991,TotalVotes1987,
TotalVotes1983,TotalVotes1979,TotalVotes1975))
kydempercent<-subset(kyelections,select=c(County,PercentDem2015,PercentDem2011,PercentDem2007,PercentDem2003,PercentDem1999,PercentDem1995,PercentDem1991,PercentDem1987,
PercentDem1983,PercentDem1979,PercentDem1975))
Year<-2019-(4*1:length(colnames(kytotalvotes)))
#Jefferson County Data Frame
JeffCoPercent<-vector(length=length(colnames(kytotalvotes))-1)
for(i in 1:length(JeffCoPercent)){
JeffCoPercent[i]<-as.numeric(kytotalvotes[56,][i+1]/sum(kytotalvotes[,i+1]))
}
JeffCoMargin<-as.numeric(kydempercent[56,][-1])
JeffCoVotes<-as.numeric(kytotalvotes[56,][-1])
JeffCoProportion<-JeffCoMargin*JeffCoPercent
JeffCoFrame<-data.frame(Year[1:length(Year)-1],JeffCoPercent,JeffCoMargin,JeffCoVotes,JeffCoProportion)
#Fayette County Data Frame
FayetteCoPercent<-vector(length=length(colnames(kytotalvotes))-1)
for(i in 1:length(FayetteCoPercent)){
FayetteCoPercent[i]<-as.numeric(kytotalvotes[34,][i+1]/sum(kytotalvotes[,i+1]))
}
FayetteCoMargin<-as.numeric(kydempercent[34,][-1])
FayetteCoVotes<-as.numeric(kytotalvotes[34,][-1])
FayetteCoProportion<-FayetteCoMargin*FayetteCoPercent
FayetteCoFrame<-data.frame(Year[1:length(Year)-1],FayetteCoPercent,FayetteCoMargin,FayetteCoVotes,FayetteCoProportion)
#County Lists
Counties2015<-sapply(which(kydempercent$PercentDem2015>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
Counties2011<-sapply(which(kydempercent$PercentDem2011>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
Counties2007<-sapply(which(kydempercent$PercentDem2007>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
Counties2003<-sapply(which(kydempercent$PercentDem2003>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
Counties1999<-sapply(which(kydempercent$PercentDem1999>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
Counties1995<-sapply(which(kydempercent$PercentDem1995>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
Counties1991<-sapply(which(kydempercent$PercentDem1991>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
Counties1987<-sapply(which(kydempercent$PercentDem1987>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
Counties1983<-sapply(which(kydempercent$PercentDem1983>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
Counties1979<-sapply(which(kydempercent$PercentDem1979>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
Counties1975<-sapply(which(kydempercent$PercentDem1975>0.5),function(i){
return<-as.character(kydempercent$County[i])
})
AllDemCounties<-data.frame(unique(c(Counties2011,Counties2007,Counties2003,Counties1999,Counties1995,Counties1991,Counties1987,Counties1983,Counties1979,Counties1975)))
colnames(AllDemCounties)<-'County'
AllDemCounties$ky2011<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties2011
})
AllDemCounties$ky2007<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties2007
})
AllDemCounties$ky2003<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties2003
})
AllDemCounties$ky1999<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1999
})
AllDemCounties$ky2011<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1995
})
AllDemCounties$ky1991<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1991
})
AllDemCounties$ky1987<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1987
})
AllDemCounties$ky1983<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1983
})
AllDemCounties$ky1979<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1979
})
AllDemCounties$ky1975<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1975
})
AlwaysDemCounties<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(!(FALSE %in% AllDemCounties[-1][i,])){
AlwaysDemCounties<-c(AlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
Lost2015Counties<-data.frame(AlwaysDemCounties,AlwaysDemCounties %in% Counties2015)
Lost2015Counties$region<-sapply(Lost2015Counties$AlwaysDemCounties,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
colnames(Lost2015Counties)<-c('region','value')
Lost2015Counties$value<-as.numeric(Lost2015Counties$value)
colnames(Lost2015Counties)<-c('County','value','region')
county_choropleth(Lost2015Counties,state_zoom='kentucky')
View(AllDemCounties)
AllDemCounties[1,]
AllDemCounties[1,][-1]
sum(AllDemCounties[1,][-1]==FALSE)
AlmostAlwaysDemocrat<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE<=1)){
AlmostAlwaysDemCounties<-c(AlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
AlmostAlwaysDemocrat<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=1){
AlmostAlwaysDemCounties<-c(AlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=2){
AlmostAlwaysDemCounties<-c(AlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=3){
AlmostAlwaysDemCounties<-c(AlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
AlmostAlwaysDemocrat<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=3){
AlmostAlwaysDemCounties<-c(AlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
#Which counties voted Democrat in every election going back to 1975
AlwaysDemCounties<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(!(FALSE %in% AllDemCounties[-1][i,])){
AlwaysDemCounties<-c(AlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
Lost2015Counties<-data.frame(AlwaysDemCounties,AlwaysDemCounties %in% Counties2015)
Lost2015Counties$region<-sapply(Lost2015Counties$AlwaysDemCounties,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
colnames(Lost2015Counties)<-c('region','value')
Lost2015Counties$value<-as.numeric(Lost2015Counties$value)
colnames(Lost2015Counties)<-c('County','value','region')
county_choropleth(Lost2015Counties,state_zoom='kentucky')
AlmostAlwaysDemocrat<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=3){
AlmostAlwaysDemCounties<-c(AlmostAlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
AlmostAlwaysDemocrat<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=1){
AlmostAlwaysDemCounties<-c(AlmostAlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
AlmostAlwaysDemocrat<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=1){
AlmostAlwaysDemCounties<-c(AlmostAlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
AlmostAlwaysDemocrat<-vector(length=0)
AlmostAlwaysDemCoutnies<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=1){
AlmostAlwaysDemCounties<-c(AlmostAlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
AlmostAlwaysDemCoutnies
AlmostAlwaysDemCounties<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=1){
AlmostAlwaysDemCounties<-c(AlmostAlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
View(Lost2015Counties)
AlmostAlwaysDemCounties<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=1){
AlmostAlwaysDemCounties<-c(AlmostAlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
LostAlmost2015Counties<-data.frame(AlmostAlwaysDemCounties,AlmostAlwaysDemCounties %in% Counties2015)
LostAlmost2015Counties$region<-sapply(Lost2015AlmostCounties$AlmostAlwaysDemCounties,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
colnames(LostAlmost2015Counties)<-c('region','value')
LostAlmost2015Counties$value<-as.numeric(LostAlmost2015Counties$value)
colnames(Lost2015Counties)<-c('County','value','region')
LostAlmost2015Counties<-data.frame(AlmostAlwaysDemCounties,AlmostAlwaysDemCounties %in% Counties2015)
LostAlmost2015Counties$region<-sapply(LostAlmost2015Counties$AlmostAlwaysDemCounties,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
colnames(LostAlmost2015Counties)<-c('region','value')
LostAlmost2015Counties$value<-as.numeric(LostAlmost2015Counties$value)
colnames(Lost2015Counties)<-c('County','value','region')
AlmostAlwaysDemCounties<-vector(length=0)
for(i in 1:length(AllDemCounties$County)){
if(sum(AllDemCounties[-1][i,]==FALSE)<=1){
AlmostAlwaysDemCounties<-c(AlmostAlwaysDemCounties,as.character(AllDemCounties$County[i]))
}
}
LostAlmost2015Counties<-data.frame(AlmostAlwaysDemCounties,AlmostAlwaysDemCounties %in% Counties2015)
LostAlmost2015Counties$region<-sapply(LostAlmost2015Counties$AlmostAlwaysDemCounties,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
colnames(LostAlmost2015Counties)<-c('region','value')
LostAlmost2015Counties$value<-as.numeric(LostAlmost2015Counties$value)
colnames(Lost2015Counties)<-c('County','value','region')
county_choropleth(LostAlmost2015Counties,state_zoom='kentucky')
View(LostAlmost2015Counties)
colnames(LostAlmost2015Counties)<-c('County','value','region')
county_choropleth(LostAlmost2015Counties,state_zoom='kentucky')
View(kyelections)
Redo2015Election<-data.frame(kyelections$County,kyelections$TotalVotes2015,kyelections$PercentDem2015)
View(Redo2015Election)
MedianMarginAlways<-data.frame(AlwaysDemCounties)
View(MedianMarginAlways)
MedianMarginAlways$AlwaysDemCounties[1]
View(kydempercent)
which(MedianMarginAlways$AlwaysDemCounties[1]==kydempercent$County)
which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)
)
which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County))
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),]
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][-1]
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][-2]
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][-1,-2]
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][-1]
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][2:end]
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][2:]
j<-c(1,2,3,4,5,6,7)
j
j[-1]
j[2:]
j[:2]
j[2,]
j[2:7]
j[2:,]
j[2:length(j)]
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),]
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][3]
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][3:length(colnames(kydempercent))]
median(kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][3:length(colnames(kydempercent))])
kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][3:length(colnames(kydempercent))]
as.numeric(kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][3:length(colnames(kydempercent))])
median(as.numeric(kydempercent[which(as.character(MedianMarginAlways$AlwaysDemCounties[1])==as.character(kydempercent$County)),][3:length(colnames(kydempercent))]))
MedianMarginAlways$medianDemPercent<-sapply(MedianMarginAlways$AlwaysDemCounties,function(i){
return<-median(as.numeric(kydempercent[which(as.character(i)==as.character(kydempercent$County)),][3:length(colnames(kydempercent))]))
})
View(MedianMarginAlways)
colnames(Redo2015Election)<-c('County','TotalVotes','ActualPercentDem')
Redo2015Election$County[1]
as.character(Redo2015Election$County[1]) %in% MedianMarginAlways$AlwaysDemCounties
as.character(Redo2015Election$County[4]) %in% MedianMarginAlways$AlwaysDemCounties
which(as.character(Redo2015Election$County[4]) == MedianMarginAlways$AlwaysDemCounties)
MedianMarginAlways$medianDemPercent[which(as.character(Redo2015Election$County[4]) == MedianMarginAlways$AlwaysDemCounties)]
which(as.character(Redo2015Election$County[4]) == Redo2015Election$County)
Redo2015Election$ActualPercentDem[which(as.character(Redo2015Election$County[4]) == Redo2015Election$County)]
Redo2015Election$ConsolidateBase<-sapply(Redo2015Election$County,function(i){
if(as.character(i) %in% MedianMarginAlways$AlwaysDemCounties){
return<-MedianMarginAlways$medianDemPercent[which(as.character(i) == MedianMarginAlways$AlwaysDemCounties)]
} else {
return<-Redo2015Election$ActualPercentDem[which(as.character(Redo2015Election$County[4]) == Redo2015Election$County)]
}
})
Redo2015Election$ConsolidateBase<-sapply(Redo2015Election$County,function(i){
if(as.character(i) %in% MedianMarginAlways$AlwaysDemCounties){
return<-MedianMarginAlways$medianDemPercent[which(as.character(i) == MedianMarginAlways$AlwaysDemCounties)]
} else {
return<-Redo2015Election$ActualPercentDem[which(as.character(i) == Redo2015Election$County)]
}
})
Redo2015Election$ConsolidateBase<-sapply(Redo2015Election$County,function(i){
if(as.character(i) %in% MedianMarginAlways$AlwaysDemCounties){
return<-MedianMarginAlways$medianDemPercent[which(as.character(i) == MedianMarginAlways$AlwaysDemCounties)]*Redo2015Election$TotalVotes[which(as.character(i) == Redo2015Election$County)]
} else {
return<-Redo2015Election$ActualPercentDem[which(as.character(i) == Redo2015Election$County)]*Redo2015Election$TotalVotes[which(as.character(i) == Redo2015Election$County)]
}
})
sum(Redo2015Election$ConsolidateBase)
sum(Redo2015Election$ConsolidateBase)/sum(Redo2015Election$TotalVotes)
sum(Redo2015Election$ActualPercentDem*Redo2015Election$TotalVotes)
sum(Redo2015Election$ActualPercentDem*Redo2015Election$TotalVotes)/sum(Redo2015Election$TotalVotes)
Redo2015Election$ConsolidateBase<-sapply(Redo2015Election$County,function(i){
if(as.character(i) %in% MedianMarginAlways$AlwaysDemCounties){
return<-MedianMarginAlways$medianDemPercent[which(as.character(i) == MedianMarginAlways$AlwaysDemCounties)]
} else {
return<-Redo2015Election$ActualPercentDem[which(as.character(i) == Redo2015Election$County)]
}
})
max(1,4)
Redo2015Election$ConsolidateBase<-sapply(Redo2015Election$County,function(i){
if(as.character(i) %in% MedianMarginAlways$AlwaysDemCounties){
return<-max(MedianMarginAlways$medianDemPercent[which(as.character(i) == MedianMarginAlways$AlwaysDemCounties)],Redo2015Election$ActualPercentDem[which(as.character(i) == Redo2015Election$County)])
} else {
return<-Redo2015Election$ActualPercentDem[which(as.character(i) == Redo2015Election$County)]
}
})
ConsolidateBasePercent<-(Redo2015Election$ConsolidateBase*Redo2015Election$TotalVotes)/(Redo2015Election$TotalVotes)
Redo2015Election$ConsolidateBase*Redo2015Election$TotalVotes
ConsolidateBasePercent<-sum(Redo2015Election$ConsolidateBase*Redo2015Election$TotalVotes)/sum(Redo2015Election$TotalVotes)
MedianMarginAlmostAlways<-data.frame(AlmostAlwaysDemCounties)
MedianMarginAlmostAlways$medianDemPercent<-sapply(MedianMarginAlmostAlways$AlmostAlwaysDemCounties,function(i){
return<-median(as.numeric(kydempercent[which(as.character(i)==as.character(kydempercent$County)),][3:length(colnames(kydempercent))]))
})
Redo2015Election$ConsolidateExpandedBase<-sapply(Redo2015Election$County,function(i){
if(as.character(i) %in% MedianMarginAlmostAlways$AlmostAlwaysDemCounties){
return<-max(MedianMarginAlmostAlways$medianDemPercent[which(as.character(i) == MedianMarginAlmostAlways$AlmostAlwaysDemCounties)],Redo2015Election$ActualPercentDem[which(as.character(i) == Redo2015Election$County)])
} else {
return<-Redo2015Election$ActualPercentDem[which(as.character(i) == Redo2015Election$County)]
}
})
ConsolidateExpandedBasePercent<-sum(Redo2015Election$ConsolidateExpandedBase*Redo2015Election$TotalVotes)/sum(Redo2015Election$TotalVotes) # Gets you to 46%
PresElex<-read.csv('./PresElex.csv')
View(PresElex)
PresElex<-read.csv('./PresElex.csv')
presdemvotes<-subset(PresElex,select=c(County,PercentDem2012,PercentDem2008,PercentDem2004,PercentDem2000))
View(presdemvotes)
Counties2012<-sapply(which(presdemvotes$PercentDem2012>0.5),function(i){
return<-as.character(presdemvotes$County[i])
})
Counties2008<-sapply(which(presdemvotes$PercentDem2008>0.5),function(i){
return<-as.character(presdemvotes$County[i])
})
Counties2004<-sapply(which(presdemvotes$PercentDem2004>0.5),function(i){
return<-as.character(presdemvotes$County[i])
})
Counties2000<-sapply(which(presdemvotes$PercentDem2000>0.5),function(i){
return<-as.character(presdemvotes$County[i])
})
AllDemPresCounties<-data.frame(unique(c(Counties2012,Counties2008,Counties2004,Counties2000)))
colnames(AllDemCounties)<-'County'
View(AllDemPresCounties)
colnames(AllDemPresCounties)<-'County'
AllDemPresCounties$ky2012<-sapply(AllDemPresCounties$County,function(i){
return<-i %in% Counties2012
})
AllDemPresCounties$ky2012<-sapply(AllDemPresCounties$County,function(i){
return<-i %in% Counties2012
})
AllDemPresCounties$ky2008<-sapply(AllDemPresCounties$County,function(i){
return<-i %in% Counties2008
})
AllDemPresCounties$ky2004<-sapply(AllDemPresCounties$County,function(i){
return<-i %in% Counties2004
})
AllDemPresCounties$ky2000<-sapply(AllDemPresCounties$County,function(i){
return<-i %in% Counties2000
})
View(AllDemPresCounties)
AlmostAlwaysDemPresCounties<-vector(length=0)
for(i in 1:length(AllDemPresCounties$County)){
if(sum(AllDemPresCounties[-1][i,]==FALSE)<=1){
AlmostAlwaysDemPresCounties<-c(AlmostAlwaysDemPresCounties,as.character(AllDemPresCounties$County[i]))
}
}
Counties2004
length(Counties2004)
length(Counties2015)
Counties2015
for(i in 1:length(AllDemPresCounties$County)){
if(sum(AllDemPresCounties[-1][i,]==FALSE)<=2){
AlmostAlwaysDemPresCounties<-c(AlmostAlwaysDemPresCounties,as.character(AllDemPresCounties$County[i]))
}
}
sum(AllDemPresCounties$ky2012==TRUE)
sum(AllDemPresCounties$ky2008==TRUE)
sum(AllDemPresCounties$ky2004==TRUE)
sum(AllDemPresCounties$ky2000==TRUE)
View(AllDemCounties)
#Which Counties voted Democrat in what years
AllDemCounties<-data.frame(unique(c(Counties2011,Counties2007,Counties2003,Counties1999,Counties1995,Counties1991,Counties1987,Counties1983,Counties1979,Counties1975)))
colnames(AllDemCounties)<-'County'
AllDemCounties$ky2011<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties2011
})
AllDemCounties$ky2007<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties2007
})
AllDemCounties$ky2003<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties2003
})
AllDemCounties$ky1999<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1999
})
AllDemCounties$ky2011<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1995
})
AllDemCounties$ky1991<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1991
})
AllDemCounties$ky1987<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1987
})
AllDemCounties$ky1983<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1983
})
AllDemCounties$ky1979<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1979
})
AllDemCounties$ky1975<-sapply(AllDemCounties$County,function(i){
return<-i %in% Counties1975
})
?sort
sort(kyelections$TotalVotes2015)
View(Lost2015Counties)
View(JeffCoFrame)
Election2015<-read.csv('./Election2015.csv')
Medicaid<-read.csv('./MedicaidExpansion.csv')
Election2015<-read.csv('./Election2015.csv')
Medicaid<-read.csv('./MedicaidExpansion.csv')
View(Medicaid)
View(Election2015)
colnames(Medicaid)<-c('County','PercentExpansion')
Medicaid<-subset(Medicaid,select=c('County','PercentExpansion'))
KYFIPS<-read.csv('./KYFIPS.csv',sep=';')
View(KYFIPS)
Election$BevinPercent<-Election2015$Bevin/Election2015Total
Election$BevinPercent<-Election2015$Bevin/Election2015$Total
Election2015$BevinPercent<-Election2015$Bevin/Election2015$Total
Election2015$region<-sapply(Election2015$County,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
Election2015<-read.csv('./Election2015.csv')
Election2015$value<-Election2015$Bevin/Election2015$Total
Medicaid<-read.csv('./MedicaidExpansion.csv')
colnames(Medicaid)<-c('County','PercentExpansion')
Medicaid<-subset(Medicaid,select=c('County','PercentExpansion'))
KYFIPS<-read.csv('./KYFIPS.csv',sep=';')
Election2015$region<-sapply(Election2015$County,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
Medicaid$region<-sapply(Medicaid$County,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
Election2015<-read.csv('./Election2015.csv')
Election2015$value<-Election2015$Bevin/Election2015$Total
Medicaid<-read.csv('./MedicaidExpansion.csv')
colnames(Medicaid)<-c('County','value')
Medicaid<-subset(Medicaid,select=c('County','PercentExpansion'))
KYFIPS<-read.csv('./KYFIPS.csv',sep=';')
Election2015$region<-sapply(Election2015$County,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
Medicaid$region<-sapply(Medicaid$County,function(i){
return<-as.numeric(KYFIPS$FIP[which(KYFIPS$County==as.character(i))])
})
library(choroplethr)
.libPaths('C:/R-Lib')
library(choroplethr)
choroplethr(Election2015)
county_choropleth(Election2015)
county_choropleth(Election2015, state_zoom = 'kentucky')
?county_choropleth
county_choropleth(Election2015, state_zoom = 'kentucky',title='Percentage of Vote for Matt Bevin & Jenean Hampton')
county_choropleth(Medicaid, state_zoom = 'kentucky',title='Percentage of Vote for Matt Bevin & Jenean Hampton')
county_choropleth(Medicaid, state_zoom = 'kentucky',title='Per Capita Medicaid Expansion Population')
library(choroplethr)
Model<-data.frame(Election2015$County,Election2015$value,Medicaid$value)
View(Model)
colnames(Model)<-c('County','BevinPercent','MedicaidExpansion')
?chisq.test
chisq.test(Model$BevinPercent,Model$MedicaidExpansion)
lm(Model$BevinPercent~Model$MedicaidExpansion)
?plot
?qplot
qplot(Model$BevinPercent,Model$MedicaidExpansion)
library(ggplot2)
qplot(Model$BevinPercent,Model$MedicaidExpansion)
?qplot
?ggplot
?qplot
